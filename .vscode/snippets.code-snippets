{
	"17_boundary_role": {
		"prefix": "17_boundary_role",
		"description": "",
		"scope": "",
		"body": [
			"locals {",
			"  boundary_user_accounts = jsondecode(var.boundary_user_accounts)",
			"}",
			"",
			"resource \"boundary_role\" \"db_users\" {",
			"  name        = \"DB Access\"",
			"  description = \"Access to the database\"",
			"  scope_id    = var.boundary_scope_id",
			"",
			"  principal_ids = [for user, details in local.boundary_user_accounts : details.id]",
			"  grant_strings = [\"id=*;type=*;actions=*\"]",
			"}"
		]
	},
	"16_boundary_target": {
		"prefix": "16_boundary_target",
		"description": "",
		"scope": "",
		"body": [
			"resource \"boundary_target\" \"db\" {",
			"  name        = \"${var.environment}-db\"",
			"  description = \"Database for ${var.environment} environment\"",
			"  scope_id    = var.boundary_scope_id",
			"",
			"  type = \"tcp\"",
			"",
			"  address             = azurerm_postgresql_server.minecraft.fqdn",
			"  default_port        = 5432",
			"  default_client_port = 5432",
			"",
			"  brokered_credential_source_ids = [",
			"    boundary_credential_library_vault.db.id",
			"  ]",
			"}"
		]
	},
	"15_boundary_library": {
		"prefix": "15_boundary_library",
		"description": "",
		"scope": "",
		"body": [
			"resource \"boundary_credential_library_vault\" \"db\" {",
			"  name                = \"${var.environment}-db-credentials\"",
			"  description         = \"Database credentials for ${var.environment} environment\"",
			"  credential_store_id = var.boundary_credential_store_id",
			"  path                = \"${vault_database_secrets_mount.minecraft.path}/creds/reader\"",
			"  http_method         = \"GET\"",
			"  credential_type     = \"username_password\"",
			"}"
		]
	},
	"14_db_volume_mount": {
		"prefix": "14_db_volume_mount",
		"description": "",
		"scope": "",
		"body": [
			"volume_mount {",
			"  name       = kubernetes_secret.db_writer.metadata.0.name",
			"  mount_path = \"/etc/db_secrets\"",
			"  read_only  = true",
			"}"
		]
	},
	"13_db_volume": {
		"prefix": "13_db_volume",
		"description": "",
		"scope": "",
		"body": [
			"volume {",
			"  name = kubernetes_secret.db_writer.metadata.0.name",
			"  secret {",
			"    secret_name = kubernetes_secret.db_writer.metadata.0.name",
			"  }",
			"}"
		]
	},
	"12_db_secret": {
		"prefix": "12_db_secret",
		"description": "",
		"scope": "",
		"body": [
			"data \"vault_generic_secret\" \"db_creds\" {",
			"  path = \"${vault_database_secrets_mount.minecraft.path}/creds/writer\"",
			"}",
			"",
			"resource \"kubernetes_secret\" \"db_writer\" {",
			"  metadata {",
			"    name = \"minecraft-db-${var.environment}\"",
			"  }",
			"",
			"  data = {",
			"    username = data.vault_generic_secret.db_creds.data.username",
			"    password = data.vault_generic_secret.db_creds.data.password",
			"  }",
			"}"
		]
	},
	"11_db_writer": {
		"prefix": "11_db_writer",
		"description": "",
		"scope": "",
		"body": [
			"resource \"vault_database_secret_backend_role\" \"writer\" {",
			"  //depends_on = [kubernetes_job.sql_import]",
			"",
			"  name    = \"writer\"",
			"  backend = vault_database_secrets_mount.minecraft.path",
			"  db_name = vault_database_secrets_mount.minecraft.postgresql[0].name",
			"  creation_statements = [",
			"    \"CREATE ROLE \\\"{{name}}\\\" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}';\",",
			"    \"GRANT SELECT ON counter TO \\\"{{name}}\\\";\",",
			"    \"GRANT INSERT ON counter TO \\\"{{name}}\\\";\",",
			"    \"GRANT UPDATE ON counter TO \\\"{{name}}\\\";\",",
			"    \"GRANT DELETE ON counter TO \\\"{{name}}\\\";\",",
			"  ]",
			"}"
		]
	},
	"10_db_role_reader": {
		"prefix": "10_db_role_reader",
		"description": "",
		"scope": "",
		"body": [
			"resource \"vault_database_secret_backend_role\" \"reader\" {",
			"  //depends_on = [kubernetes_job.sql_import]",
			"",
			"  name    = \"reader\"",
			"  backend = vault_database_secrets_mount.minecraft.path",
			"  db_name = vault_database_secrets_mount.minecraft.postgresql[0].name",
			"  creation_statements = [",
			"    \"CREATE ROLE \\\"{{name}}\\\" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}';\",",
			"    \"GRANT SELECT ON counter TO \\\"{{name}}\\\";\",",
			"  ]",
			"}"
		]
	},
	"09_db_role_import": {
		"prefix": "09_db_role_import",
		"description": "",
		"scope": "",
		"body": [
			"resource \"vault_database_secret_backend_role\" \"importer\" {",
			"  name    = \"importer\"",
			"  backend = vault_database_secrets_mount.minecraft.path",
			"  db_name = vault_database_secrets_mount.minecraft.postgresql[0].name",
			"  creation_statements = [",
			"    \"CREATE ROLE \\\"{{name}}\\\" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}';\",",
			"    \"GRANT ${azurerm_postgresql_server.minecraft.administrator_login} TO \\\"{{name}}\\\";\"",
			"  ]",
			"",
			"  default_ttl = \"100\"",
			"  max_ttl     = \"100\"",
			"}"
		]
	},
	"08_db_mount": {
		"prefix": "08_db_mount",
		"description": "",
		"scope": "",
		"body": [
			"resource \"vault_database_secrets_mount\" \"minecraft\" {",
			"  depends_on = [azurerm_postgresql_firewall_rule.minecraft]",
			"",
			"  path = \"database/minecraft_${var.environment}\"",
			"",
			"  postgresql {",
			"    name              = \"minecraft\"",
			"    username          = \"${azurerm_postgresql_server.minecraft.administrator_login}@${azurerm_postgresql_server.minecraft.name}\"",
			"    password          = random_password.root_password.result",
			"    connection_url    = \"postgresql://{{username}}:{{password}}@${azurerm_postgresql_server.minecraft.fqdn}:5432/${azurerm_postgresql_database.minecraft.name}\"",
			"    verify_connection = true",
			"    allowed_roles = [",
			"      \"reader\",",
			"      \"writer\",",
			"      \"importer\"",
			"    ]",
			"  }",
			"}"
		]
	},
	"07_pki_volume_mount": {
		"prefix": "07_pki_volume_mount",
		"description": "",
		"scope": "",
		"body": [
			"volume_mount {",
			"  name       = kubernetes_secret.pki_certs.metadata.0.name",
			"  mount_path = \"/etc/tls\"",
			"  read_only  = true",
			"}"
		]
	},
	"06_pki_volume": {
		"prefix": "06_pki_volume",
		"description": "",
		"scope": "",
		"body": [
			"        volume {",
			"          name = kubernetes_secret.pki_certs.metadata.0.name",
			"          secret {",
			"            secret_name = kubernetes_secret.pki_certs.metadata.0.name",
			"          }",
			"        }"
		]
	},
	"05_pki_secret": {
		"prefix": "05_pki_secret",
		"description": "",
		"scope": "",
		"body": [
			"resource \"kubernetes_secret\" \"pki_certs\" {",
			"  metadata {",
			"    name = \"minecraft-pki-${var.environment}\"",
			"  }",
			"",
			"  type = \"kubernetes.io/tls\"",
			"",
			"  data = {",
			"    \"tls.key\" = vault_pki_secret_backend_cert.app.private_key",
			"    \"tls.crt\" = vault_pki_secret_backend_cert.app.certificate",
			"  }",
			"}"
		]
	},
	"04_pki_cert": {
		"prefix": "04_pki_cert",
		"description": "",
		"scope": "",
		"body": [
			"resource \"vault_pki_secret_backend_cert\" \"app\" {",
			"  backend     = var.vault_pki_path",
			"  name        = vault_pki_secret_backend_role.app.name",
			"  common_name = \"app.${var.environment}.minecraft.internal\"",
			"  ttl         = \"168h\" // 7 days",
			"}"
		]
	},
	"03_pki_role": {
		"prefix": "03_pki_role",
		"description": "",
		"scope": "",
		"body": [
			"resource \"vault_pki_secret_backend_role\" \"app\" {",
			"  backend          = var.vault_pki_path",
			"  name             = \"app_role\"",
			"  ttl              = 2592000 // 30 days",
			"  allow_ip_sans    = true",
			"  key_type         = \"rsa\"",
			"  key_bits         = 4096",
			"  allow_subdomains = true",
			"  allowed_domains  = [\"${var.environment}.minecraft.internal\"]",
			"}"
		]
	},
	"02_pki_ca": {
		"prefix": "02_pki_ca",
		"description": "",
		"scope": "",
		"body": [
			"resource \"vault_pki_secret_backend_root_cert\" \"ca\" {",
			"  backend               = vault_mount.pki.path",
			"  type                  = \"internal\"",
			"  common_name           = \"${var.environment}.minecraft.internal\"",
			"  ttl                   = \"31536000\"",
			"  format                = \"pem\"",
			"  private_key_format    = \"der\"",
			"  key_type              = \"rsa\"",
			"  key_bits              = 4096",
			"  exclude_cn_from_sans  = true",
			"  ou                    = \"Development\"",
			"  organization          = \"HashiCraft\"",
			"  ",
			"  namespace = vault_namespace.namespace.path",
			"}"
		]
	},
	"01_pki_mount": {
		"prefix": "01_pki_mount",
		"description": "",
		"scope": "",
		"body": [
			"resource \"vault_mount\" \"pki\" {",
			"  path        = \"pki\"",
			"  type        = \"pki\"",
			"  description = \"PKI mount for application\"",
			"",
			"  default_lease_ttl_seconds = 86400",
			"  max_lease_ttl_seconds     = 31536000",
			"  ",
			"  namespace = vault_namespace.namespace.path",
			"}"
		]
	}
	// Place your azure workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}
